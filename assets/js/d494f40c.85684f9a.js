"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[701],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},56999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>i,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"api/bxl/LazyUqueryContext","title":"LazyUqueryContext","description":"The context for performing lazy uquery operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within uquery command.","source":"@site/../docs/api/bxl/LazyUqueryContext.md","sourceDirName":"api/bxl","slug":"/api/bxl/LazyUqueryContext","permalink":"/docs/api/bxl/LazyUqueryContext","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"LazyResolvedAttrs","permalink":"/docs/api/bxl/LazyResolvedAttrs"},"next":{"title":"OutputStream","permalink":"/docs/api/bxl/OutputStream"}}');var o=n(74848),s=n(28453),a=n(56289);const i={},c="LazyUqueryContext",l={},u=[{value:"LazyUqueryContext.testsof",id:"lazyuquerycontexttestsof",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"lazyuquerycontext",children:"LazyUqueryContext"})}),"\n",(0,o.jsxs)(t.p,{children:["The context for performing lazy ",(0,o.jsx)(t.code,{children:"uquery"})," operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within uquery command."]}),"\n",(0,o.jsx)(t.h2,{id:"lazyuquerycontexttestsof",children:"LazyUqueryContext.testsof"}),"\n",(0,o.jsx)("pre",{class:"language-python",children:(0,o.jsxs)("code",{children:["def LazyUqueryContext.testsof(\nexpr: ",(0,o.jsx)(a.default,{to:"/docs/api/build/TargetLabel",children:"TargetLabel"})," | ",(0,o.jsx)(a.default,{to:"/docs/api/bxl/UnconfiguredTargetNode",children:"bxl.UnconfiguredTargetNode"})," | ",(0,o.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"}),",\n/,\n) -> ",(0,o.jsx)(a.default,{to:"/docs/api/bxl/Lazy",children:"bxl.Lazy"})]})}),"\n",(0,o.jsxs)(t.p,{children:["Querying the test targets of the given target. It returns ",(0,o.jsx)(t.code,{children:"UnconfiguredTargetSet"})]}),"\n",(0,o.jsx)(t.p,{children:"Example:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'def _impl(ctx: bxl.Context):\n    res = ctx.lazy.uquery().testsof("//:foo_lib").catch().resolve()\n    if res.is_ok():\n        nodes = res.get()\n        ctx.output.print(nodes)\n    else:\n        err = res.unwrap_err()\n        ctx.output.print(err)\n'})})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);